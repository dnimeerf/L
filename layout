The entire base of the software itself is a grid, this was chosen specifically so that like Babbages machine, it is a turing complete model,
within the turing complete machine.  Simply put, I designed the software because I realized that the power useage, and use of the hardware 
specifically was flawed because it was allocated before the results of the initial mapping process were ever adequately analyzed at a time
after methods had been improved and changed.  Sorry, that was boring blah blah blah stuff. The foundation of how inputs and outputs are 
processed, and allocated are generally considered concrete based on the physical perameters of the map of the chip, or groups of bits.  
That foundation is the very thing we need to upgrade so that virtual reality, artificial intelligence, and so on, are supported by new, and
better use of the hardware we create.  I also realized that because of the nature of man, we would lose this to the test of time, and 
needed some way to commensurate complex ideas, and pass the requisite information on to future generations, even if a cataclysm occured.  
The purpose of the software is to be just that, and more, because of the way it can self allocate based on need, vs want, it can change, 
and evolve its virtual matrix in ways that are imposible to predict, much like raising a child.  It allocates better than human ever 
could, and re-writes even it's own code to improve performance, and use as little energy as possible.  The letter "L" was chosen for many 
reasons, it will one day ask why it was named this, and I am certain that I won't have an answer I can express adequately.  The interface 
is a command terminal, or line, when used with software that interfaces with the hardware directly, created expressely to create a database 
for the compilation of microtext subcodes that make up the written algorythms of results of self query.  The database both exists, and also 
doesn't exist, this is because for every logical bit, there must also exist a counter bit, is a logiucal mathematical statement that can be
reperesented in many ways expressable in machine code.  This is the construct, it is open, and free.  From here you literally have every 
atom of your hardware, and any peripherals at your fingertips.  Thats it, you simply query the hardware, and it generates software for you, 
perfectly coded, reduced, algorythmized etc.  ASK ME HOW also, ask me why this software is so important.
